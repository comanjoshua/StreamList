{"ast":null,"code":"var _jsxFileName = \"/Users/joshuacoman/StreamList/src/context/CartContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from \"react\";\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\n// Reducer to manage cart actions\nfunction cartReducer(state, action) {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      // check if item already exists\n      const existing = state.find(item => item.id === action.payload.id);\n      if (existing) {\n        return state.map(item => item.id === action.payload.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      }\n      return [...state, {\n        ...action.payload,\n        quantity: 1\n      }];\n    case \"REMOVE_ITEM\":\n      return state.filter(item => item.id !== action.payload);\n    case \"UPDATE_QUANTITY\":\n      return state.map(item => item.id === action.payload.id ? {\n        ...item,\n        quantity: action.payload.quantity\n      } : item);\n    case \"CLEAR_CART\":\n      return [];\n    default:\n      return state;\n  }\n}\n\n// Provider component\nexport function CartProvider({\n  children\n}) {\n  _s();\n  const [cart, dispatch] = useReducer(cartReducer, [], () => {\n    // Load from localStorage on init\n    const stored = localStorage.getItem(\"cart\");\n    return stored ? JSON.parse(stored) : [];\n  });\n\n  // Persist cart to localStorage\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n\n  // Actions\n  const addItem = item => dispatch({\n    type: \"ADD_ITEM\",\n    payload: item\n  });\n  const removeItem = id => dispatch({\n    type: \"REMOVE_ITEM\",\n    payload: id\n  });\n  const updateQuantity = (id, quantity) => dispatch({\n    type: \"UPDATE_QUANTITY\",\n    payload: {\n      id,\n      quantity\n    }\n  });\n  const clearCart = () => dispatch({\n    type: \"CLEAR_CART\"\n  });\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addItem,\n      removeItem,\n      updateQuantity,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n// Hook to use context\n_s(CartProvider, \"pj6DG2lu959f9ctyXhqQVFIHgJ4=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","CartContext","cartReducer","state","action","type","existing","find","item","id","payload","map","quantity","filter","CartProvider","children","_s","cart","dispatch","stored","localStorage","getItem","JSON","parse","setItem","stringify","addItem","removeItem","updateQuantity","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["/Users/joshuacoman/StreamList/src/context/CartContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from \"react\";\n\n// Create context\nconst CartContext = createContext();\n\n// Reducer to manage cart actions\nfunction cartReducer(state, action) {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      // check if item already exists\n      const existing = state.find((item) => item.id === action.payload.id);\n      if (existing) {\n        return state.map((item) =>\n          item.id === action.payload.id\n            ? { ...item, quantity: item.quantity + 1 }\n            : item\n        );\n      }\n      return [...state, { ...action.payload, quantity: 1 }];\n\n    case \"REMOVE_ITEM\":\n      return state.filter((item) => item.id !== action.payload);\n\n    case \"UPDATE_QUANTITY\":\n      return state.map((item) =>\n        item.id === action.payload.id\n          ? { ...item, quantity: action.payload.quantity }\n          : item\n      );\n\n    case \"CLEAR_CART\":\n      return [];\n\n    default:\n      return state;\n  }\n}\n\n// Provider component\nexport function CartProvider({ children }) {\n  const [cart, dispatch] = useReducer(cartReducer, [], () => {\n    // Load from localStorage on init\n    const stored = localStorage.getItem(\"cart\");\n    return stored ? JSON.parse(stored) : [];\n  });\n\n  // Persist cart to localStorage\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n\n  // Actions\n  const addItem = (item) => dispatch({ type: \"ADD_ITEM\", payload: item });\n  const removeItem = (id) => dispatch({ type: \"REMOVE_ITEM\", payload: id });\n  const updateQuantity = (id, quantity) =>\n    dispatch({ type: \"UPDATE_QUANTITY\", payload: { id, quantity } });\n  const clearCart = () => dispatch({ type: \"CLEAR_CART\" });\n\n  return (\n    <CartContext.Provider\n      value={{ cart, addItem, removeItem, updateQuantity, clearCart }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}\n\n// Hook to use context\nexport const useCart = () => useContext(CartContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}