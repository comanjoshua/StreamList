{"ast":null,"code":"var _jsxFileName = \"/Users/joshuacoman/StreamList/src/context/CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer, useEffect } from \"react\";\n\n// Create Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\n\n// Initial State (load from localStorage if exists)\nconst initialState = JSON.parse(localStorage.getItem(\"cart\")) || [];\n\n// Reducer handles actions\nfunction cartReducer(state, action) {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      // If subscription, only allow one\n      if (action.payload.type === \"subscription\") {\n        const alreadyHasSubscription = state.some(item => item.type === \"subscription\");\n        if (alreadyHasSubscription) {\n          alert(\"You can only add one subscription at a time.\");\n          return state;\n        }\n      }\n\n      // Check if item already in cart\n      const existingItem = state.find(item => item.id === action.payload.id);\n      if (existingItem) {\n        return state.map(item => item.id === action.payload.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      } else {\n        return [...state, {\n          ...action.payload,\n          quantity: 1\n        }];\n      }\n    case \"REMOVE_ITEM\":\n      return state.filter(item => item.id !== action.payload);\n    case \"UPDATE_QUANTITY\":\n      return state.map(item => item.id === action.payload.id ? {\n        ...item,\n        quantity: action.payload.quantity\n      } : item);\n    case \"CLEAR_CART\":\n      return [];\n    default:\n      return state;\n  }\n}\n\n// Provider component\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, dispatch] = useReducer(cartReducer, initialState);\n\n  // Save to localStorage whenever cart changes\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n\n  // Cart actions\n  const addItem = item => dispatch({\n    type: \"ADD_ITEM\",\n    payload: item\n  });\n  const removeItem = id => dispatch({\n    type: \"REMOVE_ITEM\",\n    payload: id\n  });\n  const updateQuantity = (id, quantity) => dispatch({\n    type: \"UPDATE_QUANTITY\",\n    payload: {\n      id,\n      quantity\n    }\n  });\n  const clearCart = () => dispatch({\n    type: \"CLEAR_CART\"\n  });\n\n  // Total items and total price\n  const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);\n  const totalPrice = cart.reduce((sum, item) => sum + item.quantity * item.price, 0);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addItem,\n      removeItem,\n      updateQuantity,\n      clearCart,\n      totalItems,\n      totalPrice\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"AybYfaEv3u48un10whgik6AoBGQ=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useEffect","jsxDEV","_jsxDEV","CartContext","initialState","JSON","parse","localStorage","getItem","cartReducer","state","action","type","payload","alreadyHasSubscription","some","item","alert","existingItem","find","id","map","quantity","filter","CartProvider","children","_s","cart","dispatch","setItem","stringify","addItem","removeItem","updateQuantity","clearCart","totalItems","reduce","sum","totalPrice","price","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/joshuacoman/StreamList/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useReducer, useEffect } from \"react\";\n\n// Create Context\nexport const CartContext = createContext();\n\n// Initial State (load from localStorage if exists)\nconst initialState = JSON.parse(localStorage.getItem(\"cart\")) || [];\n\n// Reducer handles actions\nfunction cartReducer(state, action) {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      // If subscription, only allow one\n      if (action.payload.type === \"subscription\") {\n        const alreadyHasSubscription = state.some(\n          (item) => item.type === \"subscription\"\n        );\n        if (alreadyHasSubscription) {\n          alert(\"You can only add one subscription at a time.\");\n          return state;\n        }\n      }\n\n      // Check if item already in cart\n      const existingItem = state.find((item) => item.id === action.payload.id);\n      if (existingItem) {\n        return state.map((item) =>\n          item.id === action.payload.id\n            ? { ...item, quantity: item.quantity + 1 }\n            : item\n        );\n      } else {\n        return [...state, { ...action.payload, quantity: 1 }];\n      }\n\n    case \"REMOVE_ITEM\":\n      return state.filter((item) => item.id !== action.payload);\n\n    case \"UPDATE_QUANTITY\":\n      return state.map((item) =>\n        item.id === action.payload.id\n          ? { ...item, quantity: action.payload.quantity }\n          : item\n      );\n\n    case \"CLEAR_CART\":\n      return [];\n\n    default:\n      return state;\n  }\n}\n\n// Provider component\nexport const CartProvider = ({ children }) => {\n  const [cart, dispatch] = useReducer(cartReducer, initialState);\n\n  // Save to localStorage whenever cart changes\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n\n  // Cart actions\n  const addItem = (item) => dispatch({ type: \"ADD_ITEM\", payload: item });\n  const removeItem = (id) => dispatch({ type: \"REMOVE_ITEM\", payload: id });\n  const updateQuantity = (id, quantity) =>\n    dispatch({ type: \"UPDATE_QUANTITY\", payload: { id, quantity } });\n  const clearCart = () => dispatch({ type: \"CLEAR_CART\" });\n\n  // Total items and total price\n  const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);\n  const totalPrice = cart.reduce(\n    (sum, item) => sum + item.quantity * item.price,\n    0\n  );\n\n  return (\n    <CartContext.Provider\n      value={{\n        cart,\n        addItem,\n        removeItem,\n        updateQuantity,\n        clearCart,\n        totalItems,\n        totalPrice,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}