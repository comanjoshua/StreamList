{"ast":null,"code":"var _jsxFileName = \"/Users/joshuacoman/StreamList/src/components/MovieSearch.js\",\n  _s = $RefreshSig$();\n// src/MovieSearch.js\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSearch() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState(null);\n  const API_KEY = \"YOUR_TMDB_API_KEY\"; // replace with your real key\n\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!query) return;\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(query)}`);\n      const data = await response.json();\n      if (data.results) {\n        setResults(data.results);\n        setError(null);\n      } else {\n        setResults([]);\n        setError(\"No results found\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Error fetching movies\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Enter movie title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: results.map(movie => {\n        var _movie$release_date;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), \" (\", (_movie$release_date = movie.release_date) === null || _movie$release_date === void 0 ? void 0 : _movie$release_date.slice(0, 4), \")\"]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieSearch, \"qpLD1yDDVh0RwvLqxhMWM/SMG8w=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MovieSearch","_s","query","setQuery","results","setResults","error","setError","API_KEY","handleSearch","e","preventDefault","response","fetch","encodeURIComponent","data","json","err","console","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","color","map","movie","_movie$release_date","title","release_date","slice","id","_c","$RefreshReg$"],"sources":["/Users/joshuacoman/StreamList/src/components/MovieSearch.js"],"sourcesContent":["// src/MovieSearch.js\nimport React, { useState } from \"react\";\n\nfunction MovieSearch() {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState(null);\n\n  const API_KEY = \"YOUR_TMDB_API_KEY\"; // replace with your real key\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (!query) return;\n\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(\n          query\n        )}`\n      );\n      const data = await response.json();\n      if (data.results) {\n        setResults(data.results);\n        setError(null);\n      } else {\n        setResults([]);\n        setError(\"No results found\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Error fetching movies\");\n    }\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h2>Search Movies</h2>\n      <form onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder=\"Enter movie title\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n      <ul>\n        {results.map((movie) => (\n          <li key={movie.id}>\n            <strong>{movie.title}</strong> ({movie.release_date?.slice(0, 4)})\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default MovieSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}