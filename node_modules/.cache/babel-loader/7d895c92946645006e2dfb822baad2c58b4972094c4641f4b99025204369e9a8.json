{"ast":null,"code":"var _jsxFileName = \"/Users/joshuacoman/StreamList/src/components/MovieSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSearch() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState(null);\n  const API_KEY = \"68f228097195c8c3bd263542cb8238b7\";\n  const IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/w200\";\n\n  // On first load, restore last query and re-fetch results\n  useEffect(() => {\n    const savedQuery = localStorage.getItem(\"movieQuery\");\n    if (savedQuery) {\n      setQuery(savedQuery);\n\n      // Fetch fresh results so they display right away\n      fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(savedQuery)}`).then(res => res.json()).then(data => {\n        if (data.results && data.results.length > 0) {\n          setResults(data.results);\n          setError(null);\n        } else {\n          setResults([]);\n          setError(\"No results found\");\n        }\n      }).catch(err => {\n        console.error(err);\n        setError(\"Error fetching movies\");\n      });\n    }\n  }, []);\n\n  // Save query whenever it changes\n  useEffect(() => {\n    if (query) {\n      localStorage.setItem(\"movieQuery\", query);\n    }\n  }, [query]);\n\n  // Save results whenever they change\n  useEffect(() => {\n    if (results.length > 0) {\n      localStorage.setItem(\"movieResults\", JSON.stringify(results));\n    }\n  }, [results]);\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!query.trim()) return;\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(query)}`);\n      const data = await response.json();\n      if (data.results && data.results.length > 0) {\n        setResults(data.results);\n        setError(null);\n      } else {\n        setResults([]);\n        setError(\"No results found\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Error fetching movies\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Enter movie title\",\n        style: {\n          padding: \"8px\",\n          width: \"250px\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        marginTop: \"20px\"\n      },\n      children: results.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"10px\",\n          width: \"200px\",\n          textAlign: \"center\"\n        },\n        children: [movie.poster_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${IMAGE_BASE_URL}${movie.poster_path}`,\n          alt: movie.title,\n          style: {\n            width: \"100%\",\n            borderRadius: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            height: \"300px\",\n            background: \"#ccc\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            borderRadius: \"8px\"\n          },\n          children: \"No Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), \" \", movie.release_date && `(${movie.release_date.slice(0, 4)})`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieSearch, \"thW03PiQ/TmQlEfxlyDE6ruvXPQ=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MovieSearch","_s","query","setQuery","results","setResults","error","setError","API_KEY","IMAGE_BASE_URL","savedQuery","localStorage","getItem","fetch","encodeURIComponent","then","res","json","data","length","catch","err","console","setItem","JSON","stringify","handleSearch","e","preventDefault","trim","response","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","width","marginRight","color","display","flexWrap","marginTop","map","movie","margin","textAlign","poster_path","src","alt","title","borderRadius","height","background","alignItems","justifyContent","release_date","slice","id","_c","$RefreshReg$"],"sources":["/Users/joshuacoman/StreamList/src/components/MovieSearch.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction MovieSearch() {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState(null);\n\n  const API_KEY = \"68f228097195c8c3bd263542cb8238b7\";\n  const IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/w200\";\n\n  // On first load, restore last query and re-fetch results\n  useEffect(() => {\n    const savedQuery = localStorage.getItem(\"movieQuery\");\n    if (savedQuery) {\n      setQuery(savedQuery);\n\n      // Fetch fresh results so they display right away\n      fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(\n          savedQuery\n        )}`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.results && data.results.length > 0) {\n            setResults(data.results);\n            setError(null);\n          } else {\n            setResults([]);\n            setError(\"No results found\");\n          }\n        })\n        .catch((err) => {\n          console.error(err);\n          setError(\"Error fetching movies\");\n        });\n    }\n  }, []);\n\n  // Save query whenever it changes\n  useEffect(() => {\n    if (query) {\n      localStorage.setItem(\"movieQuery\", query);\n    }\n  }, [query]);\n\n  // Save results whenever they change\n  useEffect(() => {\n    if (results.length > 0) {\n      localStorage.setItem(\"movieResults\", JSON.stringify(results));\n    }\n  }, [results]);\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (!query.trim()) return;\n\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(\n          query\n        )}`\n      );\n      const data = await response.json();\n\n      if (data.results && data.results.length > 0) {\n        setResults(data.results);\n        setError(null);\n      } else {\n        setResults([]);\n        setError(\"No results found\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Error fetching movies\");\n    }\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h2>Search Movies</h2>\n      <form onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder=\"Enter movie title\"\n          style={{ padding: \"8px\", width: \"250px\", marginRight: \"10px\" }}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n      <div style={{ display: \"flex\", flexWrap: \"wrap\", marginTop: \"20px\" }}>\n        {results.map((movie) => (\n          <div\n            key={movie.id}\n            style={{\n              margin: \"10px\",\n              width: \"200px\",\n              textAlign: \"center\",\n            }}\n          >\n            {movie.poster_path ? (\n              <img\n                src={`${IMAGE_BASE_URL}${movie.poster_path}`}\n                alt={movie.title}\n                style={{ width: \"100%\", borderRadius: \"8px\" }}\n              />\n            ) : (\n              <div\n                style={{\n                  width: \"100%\",\n                  height: \"300px\",\n                  background: \"#ccc\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  borderRadius: \"8px\",\n                }}\n              >\n                No Image\n              </div>\n            )}\n            <p style={{ marginTop: \"10px\" }}>\n              <strong>{movie.title}</strong>{\" \"}\n              {movie.release_date && `(${movie.release_date.slice(0, 4)})`}\n            </p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default MovieSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}